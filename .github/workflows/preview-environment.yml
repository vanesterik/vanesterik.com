name: Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy PR Preview
    if: github.event.action != 'closed'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4.0.1
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm --filter next build
        env:
          NEXT_PUBLIC_BASE_PATH: /pr-${{ github.event.number }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Create S3 bucket for PR
        run: |
          BUCKET_NAME="preview-pr-${{ github.event.number }}-${{ github.repository_owner }}"
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          aws s3 mb s3://$BUCKET_NAME
          aws s3 website s3://$BUCKET_NAME --index-document index.html --error-document 404.html

      - name: Deploy to S3
        run: |
          aws s3 sync ./apps/next/out s3://$BUCKET_NAME --delete

      - name: Update PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const repoOwner = context.repo.owner;
            const bucketName = `preview-pr-${prNumber}-${repoOwner}`;
            const region = '${{ secrets.AWS_DEFAULT_REGION }}';

            // Construct the S3 website URL
            const previewUrl = `http://${bucketName}.s3-website-${region}.amazonaws.com`;

            // Get current PR details
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            // Add preview link to PR body
            const previewSection = `\n\n---\n\nüöÄ **Preview Environment**\n\nüìç **Preview URL:** ${previewUrl}\n\n_This preview will be automatically cleaned up when the PR is closed._`;

            const existingBody = pr.body || '';
            const previewSectionRegex = /\n\n---\n\nüöÄ \*\*Preview Environment\*\*[\s\S]*?_This preview will be automatically cleaned up when the PR is closed\._/;

            let updatedBody;
            if (previewSectionRegex.test(existingBody)) {
              // Replace existing preview section
              updatedBody = existingBody.replace(previewSectionRegex, previewSection);
            } else {
              // Add new preview section
              updatedBody = existingBody + previewSection;
            }

            // Update PR description
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody
            });

            // Also add a comment for immediate notification
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview Environment Deployed**\n\nüìç Preview URL: ${previewUrl}\n\nThe preview link has also been added to the PR description.`
            });

  cleanup-preview:
    runs-on: ubuntu-latest
    name: Cleanup Preview
    if: github.event.action == 'closed'

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Delete S3 bucket
        run: |
          BUCKET_NAME="preview-pr-${{ github.event.number }}-${{ github.repository_owner }}"
          aws s3 rm s3://$BUCKET_NAME --recursive
          aws s3 rb s3://$BUCKET_NAME

      - name: Clean up PR description and comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;

            // Get current PR details
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            // Remove preview section from PR body
            const existingBody = pr.body || '';
            const previewSectionRegex = /\n\n---\n\nüöÄ \*\*Preview Environment\*\*[\s\S]*?_This preview will be automatically cleaned up when the PR is closed\._/;
            const updatedBody = existingBody.replace(previewSectionRegex, '');

            // Update PR description to remove preview section
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody
            });

            // Add cleanup comment
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üßπ **Preview Environment Cleaned Up**\n\nThe preview environment for this PR has been removed.`
            });
